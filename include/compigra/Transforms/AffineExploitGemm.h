//===-  AffineExploitGemm.h - Expand the scope of gemm kernels -*-- C++ -*-===//
//
// Compigra is under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// Declares the --affine-maximize-gemm pass, which detects and maximize the gemm
// kernels through loop transformations.
//
//===----------------------------------------------------------------------===//
#ifndef COMPIGRA_AFFINEEXPLOITGEMM_H
#define COMPIGRA_AFFINEEXPLOITGEMM_H

#include "compigra/CgraDialect.h"
#include "compigra/CgraOps.h"
#include "mlir/Pass/Pass.h"

using namespace mlir;
namespace compigra {

struct GemmVar {
  Value innerBound;
  Value middleBound;
  Value outerBound;
  Value memRef1;
  Value memRef2;
  Value memRefRes;
};

#define GEN_PASS_DEF_AFFINEMAXIMIZEGEMM
#define GEN_PASS_DECL_AFFINEMAXIMIZEGEMM
#include "compigra/Transforms/Passes.h.inc"

std::unique_ptr<mlir::Pass> createAffineMaximizeGemm();

} // namespace compigra

#endif // COMPIGRA_AFFINEEXPLOITGEMM_H